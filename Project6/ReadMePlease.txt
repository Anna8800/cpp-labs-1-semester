ВСТАВКАМИ/2

Программа должна состоять из следующих модулей (разбита на файлы):

1) support -> модуль ввода/вывода
Для файлового ввода/вывода используйте функции fprintf и fscanf.
-первичная поддержка пользователя, readme, переход на дальнейшие функции
Функции ввода/вывода НЕ должны применяться за пределами модуля ввода-вывода. По возможности стараться избегать дублирования кода,
например, код считывающий структуру с клавиатуры и из файла будет практически одинаковым,
подумайте, как организовать функции так, чтобы дублирование было минимально.

2) - модуль сортировки (вставками)
 То же самое касается и функций сортировки - алгоритм один, меняется только функция сравнения.
 Предоставьте пользователю возможность выводить перечень книг в определенном порядке. 
Написать функцию (функции) сортировки массива структур по любому из полей структуры. 

3) book -> модуль структуры книги 
В качестве основы структуру BOOK можно взять из задания №5.

4) book_collection -> модуль картотеки  
Требуется реализовать следующие функции:
- Распечатать содержимое картотеки.
- Ввести новую книгу.
- Удалить существующую книгу или диапазон книг.
- Записать текущее содержимое картотеки в файл.
- Считать из файла содержимое в картотеку.
- По всей картотеке вычислить, сколько книг относится к категории введенной пользователем.
Модуль картотеки должен включать в себя структуру Library, которая будет содержать внутри себя массив из указателей динамической размерности,
т.е. при добавлении книги размерность массива должна увеличиться. 
Чтобы добавление и удаление элементов происходило эффективно необходимо ввести две переменные в структуру картотека, 
одна будет хранить количество уже созданных элементов, 
а вторая количество свободной памяти доступной для заполнения. В случае когда количество созданных элементов превысит, 
количество свободных требуется пересоздать массив большего размера с добавлением нового блока памяти(+delta).

Выход из программы.

Везде где используется динамическая память, требуется выполнить корректные операции очистки памяти delete.
*/